worker_processes auto;
error_log /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections 1024;
}
http {
    include mime.types;
    default_type application/octet-stream;
    client_max_body_size 100m;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout 65;
    #gzip  on;
    # www.cogitantium.com //probably unnecessary
    #    server {
    #       listen 8080;
    #       server_name www.cogitantium.com;
    #       # this is supposedly applied to circumvent improper redirection with "www."-lookups
    #       rewrite ^(.*) http://cogitantium.com$1 permanent;
    #    }
    # cogitantium.com

    server {
	listen 8080;
	server_name cogitantium.com;
	root /srv/http;
	index index.html;
    }


	#nagios-block
    server {
        listen 8080;
        server_name nagios.cogitantium.com;
        root /usr/share/nagios/share;
	index	index.php index.html index.htm;
	add_header X-Frame-Options "ALLOW";
	
	auth_basic            "Nagios Access";
        auth_basic_user_file  /etc/nagios/htpasswd.users;
	
        #include sites/home.conf;
        #include sites/php.conf;
        #include sites/fastcgi.conf;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504  /50x.html;

        location ~ \.php$ {
        try_files       $uri = 404;
        fastcgi_index   index.php;
        fastcgi_pass    unix:/run/php-fpm/php-fpm.sock;
        include         fastcgi.conf;
    	}
	
	location ~ \.cgi$ {
        root            /usr/share/nagios/sbin;
        rewrite         ^/nagios/cgi-bin/(.*)\.cgi /$1.cgi break;
        fastcgi_param   AUTH_USER $remote_user;
        fastcgi_param   REMOTE_USER $remote_user;
        include         fastcgi.conf;
        fastcgi_pass    unix:/run/fcgiwrap.sock;
    	}
	
	location = /50x.html {
            root /usr/share/nginx/html;
        }
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    # www.photo.cogitantium.com //probably unnecessary (removed temporarily until better fix for NAT-loopback)
    #    server {
    #       listen 8080;
    #       server_name www.photo.cogitantium.com;
    #       # this is supposedly applied to circumvent improper redirection with "www."-lookups
    #       rewrite ^(.*) http://photo.cogitantium.com$1 permanent;
    #   }
    # photo.cogitantium.com

#    server {
#        listen 8080;
#        server_name photo.cogitantium.com;
#	#server_name 192.168.86.86;
#        root /srv/photoshow/;
#        index index.php index.html index.htm;
#        include sites/php.conf;
#        include sites/fastcgi.conf;
#	access_log /var/log/nginx/photo_access.log main;
#    }
    # local workaround for no NAT-loopback in OnHub //doesn't work for redirect-prone CMSs
    #    server {
    #       listen 8081;
    #       server_name localhost;
    #       root /srv/http/wordpress/;
    #       index index.php index.html index.htm;
    #       include sites/php.conf;
    #       include sites/fastcgi.conf;
    #    }

#	server {
#	listen 8080;
#	server_name uptime.cogitantium.com
#	root /srv/phpmonitor/;
#	index index.php index.html index.htm;
#	include sites/php.conf;
#	include sites/fastcgi.conf;
#	}
}
